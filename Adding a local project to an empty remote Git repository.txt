Step 1: Initialize Git in Your Local Project

1. Open Terminal or Command Prompt:
- On Windows, you can use Git Bash or Command Prompt.
- On macOS or Linux, use Terminal.


2. Navigate to Your Project Folder:
cd path/to/your/Project

Replace path/to/your/project with the actual path to your project folder.


3. Initialize Git:
git init

This command sets up a new Git repository in your project folder.




Step 2: Add Your Project Files to Git

Now, let's tell Git to keep track of all the files in your project folder.

1. Add Files to Git:
git add .

This command stages all files in your project folder to be committed.

Commit the Files:
git commit -m "Initial commit"

This command takes a snapshot of your files and saves them to the Git repository with a message describing the commit.




Step 3: Connect to the Remote Repository

Next, let's connect your local repository to the remote one (on GitHub, GitLab, Bitbucket, etc.).

1. Add Remote Repository:
git remote add origin https://your-remote-repository-url.git

Replace https://your-remote-repository-url.git with the URL of your remote repository. You can find this URL on the webpage of your remote repository.




Step 4: Push Your Files to the Remote Repository
Finally, let's send your local project files to the remote repository.

1. Push to Remote Repository:
git push -u origin master

This command uploads your local commits to the remote repository. The -u flag sets the upstream reference, so future git push commands can be done without specifying the branch.